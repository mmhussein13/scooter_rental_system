/*!
  * Bootstrap v5.3.0 (https://getbootstrap.com/)
  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.bootstrap = factory());
})(this, (function () { 'use strict';

  /**
   * Simple bootstrap implementation for the dropdown functionality
   */
  class Dropdown {
    constructor(element) {
      this._element = element;
      this._menu = element.nextElementSibling;
      this._element.addEventListener('click', event => this.toggle(event));
    }

    toggle(event) {
      event.preventDefault();
      const isActive = this._menu.classList.contains('show');
      
      Dropdown.clearMenus();
      
      if (!isActive) {
        this._menu.classList.add('show');
        this._element.setAttribute('aria-expanded', 'true');
      }
    }
    
    static clearMenus() {
      const dropdowns = document.querySelectorAll('.dropdown-menu');
      dropdowns.forEach(dropdown => {
        dropdown.classList.remove('show');
        const trigger = dropdown.previousElementSibling;
        if (trigger) {
          trigger.setAttribute('aria-expanded', 'false');
        }
      });
    }
    
    static handleClickOutside(event) {
      if (!event.target.closest('.dropdown')) {
        Dropdown.clearMenus();
      }
    }
  }
  
  // Close dropdowns when clicking outside
  document.addEventListener('click', Dropdown.handleClickOutside);

  /**
   * Alert dismissal
   */
  document.addEventListener('DOMContentLoaded', () => {
    const closeButtons = document.querySelectorAll('.alert .btn-close');
    closeButtons.forEach(button => {
      button.addEventListener('click', () => {
        const alert = button.closest('.alert');
        if (alert) {
          alert.classList.remove('show');
          setTimeout(() => {
            alert.remove();
          }, 150);
        }
      });
    });
  });

  // Return the public API
  return {
    Dropdown
  };
}));