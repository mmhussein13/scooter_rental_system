/* Bootstrap Bundle JS v5.3.0 */
/* This is a minimal implementation of Bootstrap for offline use */

// Define a simplified bootstrap object for components
window.bootstrap = window.bootstrap || {};

// Simple Dropdown implementation
bootstrap.Dropdown = function(element) {
  this.element = element;
  this.menu = document.querySelector(element.getAttribute('data-bs-target') || element.getAttribute('href'));
  
  this.toggle = function() {
    const parent = this.element.closest('.dropdown');
    if (parent) {
      parent.classList.toggle('show');
      if (this.menu) {
        this.menu.classList.toggle('show');
      }
    }
  };
  
  this.hide = function() {
    const parent = this.element.closest('.dropdown');
    if (parent) {
      parent.classList.remove('show');
      if (this.menu) {
        this.menu.classList.remove('show');
      }
    }
  };
  
  // Setup event listener
  this.element.addEventListener('click', (e) => {
    e.preventDefault();
    this.toggle();
  });
};

// Simple Tooltip implementation
bootstrap.Tooltip = function(element) {
  // Just a stub for compatibility
  this.element = element;
};

// Simple Popover implementation
bootstrap.Popover = function(element) {
  // Just a stub for compatibility
  this.element = element;
};

// Basic Alert implementation
bootstrap.Alert = function(element) {
  this.close = function() {
    if (element && element.parentNode) {
      element.parentNode.removeChild(element);
    }
  };
};

// Initialize dropdown behavior for the entire document
document.addEventListener('click', function(e) {
  // Handle dropdown toggle clicks
  if (e.target.classList.contains('dropdown-toggle') || 
      e.target.closest('.dropdown-toggle')) {
    const toggleElement = e.target.classList.contains('dropdown-toggle') ? 
                          e.target : e.target.closest('.dropdown-toggle');
    const dropdown = new bootstrap.Dropdown(toggleElement);
    dropdown.toggle();
  } 
  // Handle clicks outside dropdowns to close them
  else if (!e.target.closest('.dropdown-menu')) {
    document.querySelectorAll('.dropdown.show').forEach(d => {
      d.classList.remove('show');
      const menu = d.querySelector('.dropdown-menu');
      if (menu) menu.classList.remove('show');
    });
  }
});

// Basic Bootstrap initialization
document.addEventListener('DOMContentLoaded', function() {
  // Initialize dropdowns
  var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
  dropdownElementList.forEach(function(dropdownToggleEl) {
    dropdownToggleEl.addEventListener('click', function(e) {
      e.preventDefault();
      var dropdown = dropdownToggleEl.closest('.dropdown');
      if (dropdown) {
        dropdown.classList.toggle('show');
        var menu = dropdown.querySelector('.dropdown-menu');
        if (menu) menu.classList.toggle('show');
      }
    });
  });

  // Initialize alerts
  var alertList = [].slice.call(document.querySelectorAll('.alert'));
  alertList.forEach(function(alert) {
    var closeBtn = alert.querySelector('.btn-close');
    if (closeBtn) {
      closeBtn.addEventListener('click', function() {
        alert.classList.add('fade');
        setTimeout(function() {
          alert.style.display = 'none';
        }, 150);
      });
    }
  });
});